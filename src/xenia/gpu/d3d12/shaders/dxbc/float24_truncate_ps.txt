//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float       
// TEXCOORD                 1   xyzw        1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float       
// TEXCOORD                 3   xyzw        3     NONE   float       
// TEXCOORD                 4   xyzw        4     NONE   float       
// TEXCOORD                 5   xyzw        5     NONE   float       
// TEXCOORD                 6   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
// TEXCOORD                 8   xyzw        8     NONE   float       
// TEXCOORD                 9   xyzw        9     NONE   float       
// TEXCOORD                10   xyzw       10     NONE   float       
// TEXCOORD                11   xyzw       11     NONE   float       
// TEXCOORD                12   xyzw       12     NONE   float       
// TEXCOORD                13   xyzw       13     NONE   float       
// TEXCOORD                14   xyzw       14     NONE   float       
// TEXCOORD                15   xyzw       15     NONE   float       
// TEXCOORD                16   xyz        16     NONE   float       
// TEXCOORD                17   xy         17     NONE   float       
// SV_Position              0   xyzw       18      POS   float     z 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_DepthLessEqual        0    N/A oDepthLE  DEPTHLE   float    YES
//
// Pixel Shader runs at sample frequency
//
ps_5_1
dcl_globalFlags refactoringAllowed
dcl_input_ps_siv linear noperspective sample v18.z, position
dcl_output oDepthLE
dcl_temps 1
mul_sat [precise(x)] r0.x, v18.z, l(2.000000)
uge [precise(y)] r0.y, r0.x, l(0x2e800000)
if_nz r0.y
  ubfe [precise(y)] r0.y, l(8), l(23), r0.x
  iadd [precise(y)] r0.y, -r0.y, l(116)
  imax [precise(y)] r0.y, r0.y, l(3)
  bfi [precise(x)] r0.x, r0.y, l(0), l(0), r0.x
else 
  mov [precise(x)] r0.x, l(0)
endif 
mul [precise(x)] oDepthLE, r0.x, l(0.500000)
ret 
// Approximately 12 instruction slots used
